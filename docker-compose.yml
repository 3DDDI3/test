version: '3.8'

services:
  #контейнеры frontend'a
  nginx:
    container_name: test_nginx
    image: "nginx:stable-alpine"
    ports:
      - 80:80
    environment:
      - VIRTUAL_HOST=localhost
    volumes:
      - ./configs/nginx.conf/:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/laravel
      - ../storage:/var/www/laravel/storage/app/
    networks:
      - backend

  nodejs:
    container_name: test_nodejs
    environment:
      - PORT=5174
    build:
      context: dockerfiles
      dockerfile: nodejs.Dockerfile
    ports:
      - 5174:5174
    volumes:
      - ./src:/var/www/laravel
    networks:
      - backend

  php:
    container_name: test_php
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
      - ../storage:/var/www/laravel/storage/app/
    depends_on:
      - supervisor
    networks:
      - backend
   
  mysql:
    container_name: test_mysql
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - backend

  phpmyadmin:
    container_name: test_pma
    image: phpmyadmin:5.2
    ports:
      - 81:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      PMA_PORT: 3306
    networks:
      - backend

  supervisor:
    build:
      context: dockerfiles
      dockerfile: supervisor.Dockerfile
    container_name: test_supervisor
    environment:
      - PORT=8000
    volumes:
      - ./src:/var/www/laravel
      - ./configs/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
      - ./configs/supervisord.conf:/etc/supervisord.conf:ro
      - ./src/storage/logs:/etc/supervisor/logs
    command: "supervisord -n -c /etc/supervisord.conf"
    ports:
      - 8000:8000
    networks:
      - backend

  # вспомогательные контейнеры
  composer:
    container_name: test_composer
    build:
      context: dockerfiles
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    networks:
      - backend

  artisan:
    container_name: test_artisan
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    entrypoint: [ "php", "/var/www/laravel/artisan" ]
    user: "1000:1000"
    networks:
      - backend

networks:
  backend:
    driver: bridge
